name: CI

on:
  - push
  - pull_request

permissions: read-all

jobs:
  build-and-test:
    permissions:
      attestations: write
      contents: read
      id-token: write

    strategy:
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
      - name: Checkout tree
        uses: actions/checkout@v4

      - name: Set-up OCaml
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5.1.1

      # - run: opam install . --deps-only --with-test
      - run: opam install base stdio dune -y

      - run: opam exec -- dune build
      - run: opam exec -- dune runtest --verbose
     
         
  #  opam exec -- coq_makefile -f _CoqProject -o CoqMakefile && \
  #  make -f CoqMakefile && \

  # build:
  #   needs: install
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up OCaml
  #       uses: ocaml/setup-ocaml@v3
  #       with:
  #         ocaml-compiler: 5.1.1

  #     - name: Cache Dune build artifacts
  #       uses: actions/cache@v3
  #       with:
  #         path: _build/default
  #         key: ${{ runner.os }}-dune-${{ hashFiles('**/*.ml', '**/*.mli', '**/*.v', '**/*.vo') }}
  #         restore-keys: |
  #           ${{ runner.os }}-dune-

  #     - name: Build Coq files
  #       run: eval $(opam env) && \
  #         opam exec -- coq_makefile -f _CoqProject -o CoqMakefile && \
  #         make -f CoqMakefile && \

  #     - name: Build OCaml project with Dune
  #       run: opam exec -- dune build

  # test:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up OCaml
  #       uses: ocaml/setup-ocaml@v3
  #       with:
  #         ocaml-compiler: 5.1.1

  #     - name: Run tests with Dune
  #       run: opam exec -- dune test -f --verbose